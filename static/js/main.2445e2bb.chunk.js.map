{"version":3,"sources":["Layout.js","Comparisions/Styles.js","CodePrinter.js","Item.js","Comparisions/Basic.js","Comparisions/Spandability.js","App.js","Comparisions/Responsive.js","index.js"],"names":["res","Cell","styled","div","props","span","vspan","StyledGrid","columns","xs","sm","md","lg","xl","xxl","gutter","Array","isArray","undefined","Grid","loading","className","size","children","FlexSection","direction","Title","Result","Info","pro","con","hasChar","str","char","indexOf","split2s","delim","p","substring","StyledCode","Empty","width","fill","map","_","i","TagSymbol","Tag","Text","TextString","ParamString","VerticalEmpty","HtmlCode","code","split","line","console","log","nodes","length","p1","p2","push","trim","q1","q2","charAt","CssCode","CodePrinter","codeFragments","fragment","type","beautyColors","StItem","parseInt","Math","random","bgcolor","Item","minwidth","maxwidth","Row","AntRow","ant","grid","Basic","warning","style","textOrientation","writingMode","Spandability","paddingLeft","fontFamily","waring","textAlign","Section","App","useEffect","document","title","margin","src","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2445e2bb.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Spin } from 'antd'\n\nconst res = {\n  MIN_SM_SIZE: 576,\n  MIN_MD_SIZE: 768,\n  MIN_LG_SIZE: 992,\n  MIN_XL_SIZE: 1200,\n  MIN_XXL_SIZE: 1600,\n}\n\nconst Cell = styled.div`\n  display: grid;\n  ${props => props.span && `grid-column: auto/ span ${props.span};`}\n  ${props => props.vspan && `grid-row: auto/ span ${props.vspan};`}\n`\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  ${props => (props.columns || props.xs) && `grid-template-columns: repeat(${props.columns || props.xs || 1}, 1fr);`}\n  ${props => props.sm &&\n    `@media (min-width: ${res.MIN_SM_SIZE}px) {\n      grid-template-columns: repeat(${props.sm}, 1fr);\n    }`\n  }\n  ${props => props.md && \n    `@media (min-width: ${res.MIN_MD_SIZE}px) {\n      grid-template-columns: repeat(${props.md}, 1fr);\n    }`\n  }\n  ${props => props.lg &&\n    `@media (min-width: ${res.MIN_LG_SIZE}px) {\n      grid-template-columns: repeat(${props.lg}, 1fr);\n    }`\n  }\n  ${props => props.xl &&\n    `@media (min-width: ${res.MIN_XL_SIZE}px) {\n      grid-template-columns: repeat(${props.xl}, 1fr);\n    }`\n  }\n  ${props => props.xxl &&\n    `@media (min-width: ${res.MIN_XXL_SIZE}px) {\n      grid-template-columns: repeat(${props.xxl}, 1fr);\n    }`\n  }\n  ${(props) =>\n    props.gutter\n      ? Array.isArray(props.gutter)\n        ? `grid-gap: ${props.gutter[0]}px ${props.gutter[1]}px;`\n        : `grid-gap: ${props.gutter}px;`\n      : undefined}\n`\n\n/**\n * if minWidth is provided, the columns will grow until a new column can be created\n * if not, you could use ant-like props as xs, md, lg etc.\n * but GRID IS NOT A 24 SECTION SYSTEM, so you must send directly the number of columns that you want\n * Eg.\n * ╔════════════════╦═════════════════╗\n * ║      Grid      ║       Ant       ║\n * ╠════════════════╬═════════════════╣\n * ║ xs={2}         ║ xs={12}         ║\n * ║ md={4}         ║ md={6}          ║\n * ║ lg={6}         ║ lg={4}          ║\n * ║ xl={24}        ║ xl={1}          ║\n * ║ columns={8}    ║ span={3}        ║\n * ║ columns={5}    ║ -Not available- ║\n * ╚════════════════╩═════════════════╝\n */\nconst Grid = (props) => {\n  if (props.loading) {\n    return (\n      <div className=\"flex justify-center\">\n        <Spin size=\"large\" />\n      </div>\n    )\n  }\n\n  return <StyledGrid {...props}>{props.children}</StyledGrid>\n}\n\nGrid.Cell = Cell\n\nexport const FlexSection = styled.div`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  > *:not(:last-child) {\n    ${props => props.direction === 'column'\n      ? `margin-bottom: ${props.gutter}px;`\n      : `margin-right: ${props.gutter}px;`}\n  } \n`\n\nexport default Grid","import styled from 'styled-components'\n\nexport const Title = styled.div`\n  text-align: center;\n  font-size: 24px;\n`\n\nexport const Result = styled.div`\n  border: 3px solid #fff;\n`\n\nexport const Info = styled.div`\n  font-size: 16px;\n  font-weight: bold;\n  color: ${props => props.pro ? '#0f0' : props.con ? 'red' : 'yellow'};\n`","import React from 'react'\nimport styled from 'styled-components'\n\nfunction hasChar(str, char) {\n  return str.indexOf(char) !== -1\n}\n\nfunction split2s(str, delim) {\n  const p = str.indexOf(delim);\n  if (p !== -1) {\n      return [str.substring(0,p), str.substring(p+1)];\n  } else {\n      return [str];\n  }\n}\n\nconst StyledCode = styled.div`\n  padding: 15px;\n  border-radius: 5px;\n  font-family: monospace;\n  background-color: #111;\n  border: 1px solid #888;\n  font-weight: bold;\n  font-size: 14px;\n  overflow: auto;\n\n  > * {\n    white-space: nowrap;\n  }\n`\n\nconst Empty = (props) => <>{Array(props.width).fill(false).map((_, i) => <span key={i}>&nbsp;</span>)}</>\n\nconst TagSymbol = styled.span`\n  color: #79c0ff;\n`\n\nconst Tag = styled.span`\n  color: #7ee787;\n`\n\nconst Text = styled.span`\n  color: #c9d1d9;\n`\n\nconst TextString = styled.span`\n  color: #d5a6a6;\n`\n\nconst ParamString = styled.span`\n  color: yellow;\n`\n\nconst VerticalEmpty = styled.div`\n  height: 1em;\n  width: 100%;\n`\n\nconst HtmlCode = (props) => {\n  return <div>\n    {props.code.split('\\n').map((line) => {\n      console.log(line)\n      const nodes = []\n      if (line.length > 0) {\n        while (line.length) {\n          //separo por <\n          let [p1, p2] = split2s(line, '<')\n          //convierto espacio en padding\n          if (p1.length) {\n            nodes.push(<Empty width={p1.length - p1.trim().length}/>)\n            nodes.push(<Text>{p1.trim()}</Text>)\n          }\n          if (p2) {\n            //escribo un <\n            nodes.push(<TagSymbol>&lt;</TagSymbol>)\n            //separo por >\n            ;[p1, p2] = split2s(p2, '>')\n            //separo por \" \"\n            let [q1, q2] = split2s(p1, ' ')\n            nodes.push(<Tag>{q1}</Tag>)\n            //debugger\n            if (q2) {\n              //mientras hay =\n              while (hasChar(q2, '=')) {\n                nodes.push(<Empty width={1} />)\n                //separo por =\n                ;[q1, q2] = split2s(q2, '=')\n                //escribo nombre prop y escribo =\n                nodes.push(<TagSymbol>{`${q1}=`}</TagSymbol>)\n                if (q2.charAt(0) === '\"') {\n                  ;[q1, q2] = split2s(q2.substring(1), '\"')\n                  nodes.push(<TextString>{`\"${q1}\"`}</TextString>)\n                } else {\n                  ;[q1, q2] = split2s(q2.substring(1), '}')\n                  nodes.push(<Text>{`{${q1}}`}</Text>)\n                }\n              }\n              if (q2.length > 0) {\n                nodes.push(<Empty width={1} />)\n                nodes.push(<TagSymbol>{q2}</TagSymbol>)\n              }\n            }\n            nodes.push(<TagSymbol>&gt;</TagSymbol>)\n          }\n          line = p2 || ''\n        }\n      }\n      else {\n        nodes.push(<VerticalEmpty />)\n      }\n      return <div>\n        {nodes}\n      </div>\n    })}\n  </div>\n}\n\nconst CssCode = (props) => {\n  return <div>\n    {props.code.split('\\n').map((line) => {\n      console.log(line)\n      const nodes = []\n      if (line.length > 0) {\n        nodes.push(<Empty width={line.length - line.trim().length}/>)\n        line = line.trim()\n        if (hasChar(line, ':')) {\n          let [p1, p2] = split2s(line, ':')\n          nodes.push(<TagSymbol>{p1}:</TagSymbol>)\n          while (hasChar(p2, '{')) {\n            ;[p1, p2] = split2s(p2, '{')\n            nodes.push(<TextString>{p1}</TextString>)\n            ;[p1, p2] = split2s(p2, '}')\n            nodes.push(<ParamString>{`{${p1}}`}</ParamString>)\n          }\n          nodes.push(<TextString>{p2}</TextString>)\n        }\n        else if (hasChar(line, '{') || hasChar(line, '}')) {\n          nodes.push(<Text>{line}</Text>)\n        }\n        else {\n          nodes.push(<TextString>{line}</TextString>)\n        }\n      }\n      else {\n        nodes.push(<VerticalEmpty />)\n      }\n      return <div>\n        {nodes}\n      </div>\n    })}\n  </div>\n}\n\nconst CodePrinter = (props) => {\n  return <StyledCode>\n    {props.codeFragments.map((fragment) => {\n      switch (fragment.type) {\n        case 'css': return <CssCode code={fragment.code}/>\n        case 'html': return <HtmlCode code={fragment.code}/>\n      }\n    })}\n  </StyledCode>\n}\n\nexport default CodePrinter\n","import styled from 'styled-components'\n\nconst beautyColors = [\n  \"#FFB5E8\", \"#FF9CEE\", \"#FFCCF9\", \"#FCC2FF\", \"#F6A6FF\",\n  \"#B28DFF\", \"#C5A3FF\", \"#D5AAFF\", \"#ECD4FF\", \"#FBE4FF\",\n  \"#DCD3FF\", \"#A79AFF\", \"#B5B9FF\", \"#97A2FF\", \"#AFCBFF\",\n  \"#AFF8DB\", \"#C4FAF8\", \"#85E3FF\", \"#ACE2FF\", \"#6EB5FF\",\n  \"#BFFCC6\", \"#DBFFD6\", \"#F3FFE3\", \"#E7FFAC\", \"#FFFFD1\",\n  \"#FFC9DE\", \"#FFABAB\", \"#FFBEBC\", \"#FFCBC1\", \"#FFF5BA\",\n]\n\nconst StItem = styled.div`\n  ${console.log(parseInt(Math.random() * beautyColors.length))}\n  position: relative;\n  border: 1px solid black;\n  border-radius: 8px;\n  background-color: ${(props) => props.bgcolor};\n  padding: 10px; \n  color: black;\n  font-weight: bolder;\n  text-align: center;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  &:before {\n    content: \" \";\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border: 10px solid;\n    border-radius: 8px;\n    border-top-color:  #ffffffa0;\n    border-left-color:  #ffffffa0;\n    border-bottom-color:  #00000040;\n    border-right-color:  #00000040;\n  }\n`\n\nconst StItemW = styled(StItem)`\n  ${props => props.width && `width: ${props.width}px;`}\n  ${props => props.minwidth && `min-width: ${props.width}px;`}\n  ${props => props.maxwidth && `max-width: ${props.width}px;`}\n`\n\nexport const Item = (props) => {\n  return <StItem {...props} bgcolor={beautyColors[parseInt(Math.random() * beautyColors.length)]}>\n    {props.children}\n  </StItem>\n}\n\nexport const MinItem = (props) => {\n  return <StItemW {...props} minwidth={150} bgcolor={beautyColors[parseInt(Math.random() * beautyColors.length)]}>\n    {props.children}\n  </StItemW>\n}\n\nexport const MaxItem = (props) => {\n  return <StItemW {...props} maxwidth={150} bgcolor={beautyColors[parseInt(Math.random() * beautyColors.length)]}>\n    {props.children}\n  </StItemW>\n}\n\nexport const FixItem = (props) => {\n  return <StItemW {...props} width={150} bgcolor={beautyColors[parseInt(Math.random() * beautyColors.length)]}>\n    {props.children}\n  </StItemW>\n}\n","import react from 'react'\nimport { Info, Result, Title } from './Styles'\nimport Code from '../CodePrinter'\nimport { Col, Row as AntRow } from \"antd\";\nimport { Item } from '../Item'\nimport Grid, { FlexSection } from '../Layout';\nimport styled from 'styled-components'\n\nconst Row = styled(AntRow)`\n  .ant-col {\n    background-color: #00ff00;\n  }\n`\n\nconst ant = {\n  code: <FlexSection direction=\"column\" gutter={24}>\n    <Row gutter={[16, 16]}>\n      <Col span={12}><Item>Item</Item></Col>\n      <Col span={12}><Item>Item</Item></Col>\n      <Col span={12}><Item>Item</Item></Col>\n      <Col span={12}><Item>Item</Item></Col>\n      <Col span={12}><Item>Item</Item></Col>\n      <Col span={12}><Item>Item</Item></Col>\n    </Row>\n    <Row gutter={[12, 24]}>\n      <Col span={6}><Item>Item</Item></Col>\n      <Col span={6}><Item>Item</Item></Col>\n      <Col span={6}><Item>Item</Item></Col>\n      <Col span={6}><Item>Item</Item></Col>\n      <Col span={6}><Item>Item</Item></Col>\n      <Col span={6}><Item>Item</Item></Col>\n    </Row>\n    <Row gutter={4}>\n      <Col span={5}><Item>Item</Item></Col>\n      <Col span={5}><Item>Item</Item></Col>\n      <Col span={5}><Item>Item</Item></Col>\n      <Col span={5}><Item>Item</Item></Col>\n      <Col span={5}><Item>Item</Item></Col>\n      <Col span={5}><Item>Item</Item></Col>\n    </Row>\n  </FlexSection>,\n  fragment: [{\n    type: 'css',\n    code: `\n.ant-col {\n  background-color: #00ff00;\n}`},{\n    type: 'html',\n    code:`\n<Row gutter={[16, 16]}>\n  <Col span={12}><Item>Item</Item></Col>\n  <Col span={12}><Item>Item</Item></Col>\n  <Col span={12}><Item>Item</Item></Col>\n  <Col span={12}><Item>Item</Item></Col>\n  <Col span={12}><Item>Item</Item></Col>\n  <Col span={12}><Item>Item</Item></Col>\n</Row>\n<Row gutter={[12, 24]}>\n  <Col span={6}><Item>Item</Item></Col>\n  <Col span={6}><Item>Item</Item></Col>\n  <Col span={6}><Item>Item</Item></Col>\n  <Col span={6}><Item>Item</Item></Col>\n  <Col span={6}><Item>Item</Item></Col>\n  <Col span={6}><Item>Item</Item></Col>\n</Row>\n<Row gutter={4}>\n  <Col span={5}><Item>Item</Item></Col>\n  <Col span={5}><Item>Item</Item></Col>\n  <Col span={5}><Item>Item</Item></Col>\n  <Col span={5}><Item>Item</Item></Col>\n  <Col span={5}><Item>Item</Item></Col>\n  <Col span={5}><Item>Item</Item></Col>\n</Row>`\n  }]\n}\n\nconst grid= {\n  code: <FlexSection direction=\"column\" gutter={24}>\n    <Grid columns={2} gutter={16}>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n    </Grid>\n    <Grid columns={4} gutter={[12, 24]}>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n    </Grid>\n    <Grid columns={5} gutter={4}>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n    </Grid>\n  </FlexSection>,\n  fragment: [{\n    type: 'css',\n    code: `\n.grid {\n  display: grid;\n  grid-template-columns: repeat({columns}, 1fr);\n  grid-gap: {gutter}px {gutter?}px;\n}`},{\n    type: 'html',\n    code:`\n<Grid columns={2} gutter={16}>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n</Grid>\n<Grid columns={4} gutter={[12, 24]}>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n</Grid>\n<Grid columns={5} gutter={4}>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n  <Item>Item</Item>\n</Grid>`\n  }]\n}\n\nconst Basic = () => {\n  return <FlexSection direction=\"column\" gutter={10}>\n    <Title>Basic Usage</Title>\n    <Grid columns={2} gutter={24}>\n      <div>\n        <Info warning>Supported by almost any browser (but nobody cares IE)</Info>\n        <Info pro>Support any amount of columns</Info>\n        <Info pro>Don't need extra components</Info>\n      </div>\n      <div>\n        <Info pro>Supported by any browser</Info>\n        <Info con>Is limited by the 24 column system</Info>\n        <Info con>Needs a Col wrapper on each item to works</Info>\n        <Info con>Each col must have span prop to fill the space</Info>\n        <Info con>Use weird tricks like negative margins</Info>\n      </div>\n      <Code codeFragments={grid.fragment} />\n      <Code codeFragments={ant.fragment} />\n      <Result>\n        {grid.code}\n      </Result>\n      <Result>\n        {ant.code}\n      </Result>\n    </Grid>\n  </FlexSection>\n}\n\nexport default Basic\n","import react from 'react'\nimport { Info, Result, Title } from './Styles'\nimport Code from '../CodePrinter'\nimport { Col, Row } from \"antd\";\nimport { Item } from '../Item'\nimport Grid, { FlexSection } from '../Layout';\n\nconst ant = {\n  code: <FlexSection direction=\"column\" gutter={24}>\n    <Row gutter={[16, 16]}>\n      <Col span={3}><Item>Item-3</Item></Col>\n      <Col span={5}><Item>Item-5</Item></Col>\n      <Col span={7}><Item>Item-7</Item></Col>\n      <Col span={9}><Item>Item-9</Item></Col>\n      <Col span={8}><Item>Item-8</Item></Col>\n      <Col span={20}><Item>Item-20</Item></Col>\n      <Col span={3}><Item style={{ textOrientation: 'upright', writingMode: 'vertical-rl' }}>I 3x2</Item></Col>\n      <Col span={10}><Item>Item-10</Item></Col>\n    </Row>\n  </FlexSection>,\n  fragment: [{\n    type: 'html',\n    code:`\n<Row gutter={[16, 16]}>\n  <Col span={3}><Item>Item-3</Item></Col>\n  <Col span={5}><Item>Item-5</Item></Col>\n  <Col span={7}><Item>Item-7</Item></Col>\n  <Col span={9}><Item>Item-9</Item></Col>\n  <Col span={8}><Item>Item-8</Item></Col>\n  <Col span={20}><Item>Item-20</Item></Col>\n  <Col span={3}>\n    <Item style=\"text-orientation: upright; writing-mode: vertical-rl\">\n      I 3x2\n    </Item>\n  </Col>\n  <Col span={10}><Item>Item-10</Item></Col>\n</Row>`\n  }]\n}\n\n\nconst grid= {\n  code: <FlexSection direction=\"column\" gutter={24}>\n    <Grid columns={24} gutter={16}>\n      <Grid.Cell span={3}><Item>Item-3</Item></Grid.Cell>\n      <Grid.Cell span={5}><Item>Item-5</Item></Grid.Cell>\n      <Grid.Cell span={7}><Item>Item-7</Item></Grid.Cell>\n      <Grid.Cell span={9}><Item>Item-9</Item></Grid.Cell>\n      <Grid.Cell span={8}><Item>Item-8</Item></Grid.Cell>\n      <Grid.Cell span={20}><Item>Item-20</Item></Grid.Cell>\n      <Grid.Cell span={3} vspan={2}><Item style={{ textOrientation: 'upright', writingMode: 'vertical-rl' }}>I 3x2</Item></Grid.Cell>\n      <Grid.Cell span={10}><Item>Item-10</Item></Grid.Cell>\n    </Grid>\n  </FlexSection>,\n  fragment: [{\n    type: 'css',\n    code: `\n.grid {\n  display: grid;\n  grid-template-columns: repeat({columns}, 1fr);\n  grid-gap: {gutter}px;\n}\n.cell {\n  display: grid;\n  grid-column: auto/ span {span};\n  grid-row: auto/ span {vspan};\n}\n`},{\n    type: 'html',\n    code:`\n<Grid columns={24} gutter={16}>\n  <Grid.Cell span={3}><Item>Item-3</Item></Grid.Cell>\n  <Grid.Cell span={5}><Item>Item-5</Item></Grid.Cell>\n  <Grid.Cell span={7}><Item>Item-7</Item></Grid.Cell>\n  <Grid.Cell span={9}><Item>Item-9</Item></Grid.Cell>\n  <Grid.Cell span={8}><Item>Item-8</Item></Grid.Cell>\n  <Grid.Cell span={20}><Item>Item-20</Item></Grid.Cell>\n  <Grid.Cell span={3} vspan={2}>\n    <Item style=\"text-orientation: upright; writing-mode: vertical-rl\">\n      I 3x2\n    </Item>\n  </Grid.Cell>\n  <Grid.Cell span={10}><Item>Item-10</Item></Grid.Cell>\n</Grid>`\n  }]\n}\n\nconst Spandability = () => {\n  return <FlexSection direction=\"column\" gutter={10}>\n    <Title>Span-dability</Title>\n    <Grid columns={2} gutter={24}>\n      <div>\n        <Info con>Needs extra component</Info>\n        <Info pro>It works with vertical span*</Info>\n        <Info con>Needs some tricks in some cases:</Info>\n        <Info con style={{ paddingLeft: '2em' }}>\n          On firefox overflow doesn't work properly, it need an&nbsp;\n          <span style={{ fontFamily: 'monospace' }}>overflow:auto</span>&nbsp;\n          or&nbsp;\n          <span style={{ fontFamily: 'monospace' }}>display:grid</span>&nbsp;\n          on the cell component\n        </Info>\n        <Info warning style={{ paddingLeft: '2em' }}>\n          *to fill vertical available space with v span cell needs to&nbsp;\n          <span style={{ fontFamily: 'monospace' }}>display:grid</span>\n        </Info>\n      </div>\n      <div>\n        <Info pro>It works as always</Info>\n      </div>\n      <Grid.Cell span={2}>\n        <Info waring style={{ textAlign: 'center' }}>in my experience, on 90% of the cases using this functionality is a sympthom of a poor layout design</Info>\n      </Grid.Cell>\n      <Code codeFragments={grid.fragment} />\n      <Code codeFragments={ant.fragment} />\n      <Result>\n        {grid.code}\n      </Result>\n      <Result>\n        {ant.code}\n      </Result>\n    </Grid>\n  </FlexSection>\n}\n\nexport default Spandability\n","import 'antd/dist/antd.css';\nimport styled from 'styled-components'\nimport { FlexSection } from './Layout';\nimport Basic from './Comparisions/Basic';\nimport Spandability from './Comparisions/Spandability'\nimport Responsive from './Comparisions/Responsive'\nimport { useEffect } from 'react';\n\nconst Section = styled.div`\n  min-height: 100vh;\n  min-width: 992px;\n  padding: 20px;\n  background-color: black;\n  color: white;\n`\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"Test your grid\"\n  }, []);\n  return (\n    <Section>\n      <FlexSection direction='column' gutter={16}>\n        <img style={{margin: 'auto'}} src={process.env.PUBLIC_URL + '/test.gif'}/>\n        <Basic />\n        <Spandability />\n        {/*<Responsive />*/}\n        {/**\n         * responsive\n         *    both: could support different layouts\n         *    grid pro: could adapt amount of columns based on child width\n         * \n         * flex\n         *    grid con: you need a different Grid template on each example\n         *    ant pro: could receive flex props\n         */}\n      </FlexSection>\n    </Section>\n  );\n}\n\nexport default App;\n","import react from 'react'\nimport { Info, Result, Title } from './Styles'\nimport Code from '../CodePrinter'\nimport { Col, Row } from \"antd\";\nimport { Item, FixItem, MaxItem, MinItem } from '../Item'\nimport Grid, { FlexSection } from '../Layout';\n\nconst ant = {\n  code: <FlexSection direction=\"column\" gutter={24}>\n    <Row gutter={[16, 16]}>\n      <Col md={24} lg={12} xl={6}><Item>Item</Item></Col>\n      <Col md={24} lg={12} xl={6}><Item>Item</Item></Col>\n      <Col md={24} lg={12} xl={6}><Item>Item</Item></Col>\n      <Col md={24} lg={12} xl={6}><Item>Item</Item></Col>\n    </Row>\n  </FlexSection>,\n  fragment: [{\n    type: 'html',\n    code:`\n<Row gutter={[16, 16]}>\n  <Col span={3}><Item>Item-3</Item></Col>\n  <Col span={5}><Item>Item-5</Item></Col>\n  <Col span={7}><Item>Item-7</Item></Col>\n  <Col span={9}><Item>Item-9</Item></Col>\n  <Col span={8}><Item>Item-8</Item></Col>\n  <Col span={20}><Item>Item-20</Item></Col>\n  <Col span={3}>\n    <Item style=\"text-orientation: upright; writing-mode: vertical-rl\">\n      I 3x2\n    </Item>\n  </Col>\n  <Col span={10}><Item>Item-10</Item></Col>\n</Row>`\n  }]\n}\n\n\nconst grid= {\n  code: <FlexSection direction=\"column\" gutter={24}>\n    <Grid md={1} lg={2} xl={4} gutter={16}>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n      <Item>Item</Item>\n    </Grid>\n    <Grid>\n      <FixItem>Item</FixItem>\n      <FixItem>Item</FixItem>\n      <FixItem>Item</FixItem>\n      <FixItem>Item</FixItem>\n    </Grid>\n  </FlexSection>,\n  fragment: [{\n    type: 'css',\n    code: `\n.grid {\n  display: grid;\n  grid-template-columns: repeat({columns}, 1fr);\n  grid-gap: {gutter}px;\n}`},{\n    type: 'html',\n    code:`\n<Grid columns={24} gutter={16}>\n  <Grid.Cell span={3}><Item>Item-3</Item></Grid.Cell>\n  <Grid.Cell span={5}><Item>Item-5</Item></Grid.Cell>\n  <Grid.Cell span={7}><Item>Item-7</Item></Grid.Cell>\n  <Grid.Cell span={9}><Item>Item-9</Item></Grid.Cell>\n  <Grid.Cell span={8}><Item>Item-8</Item></Grid.Cell>\n  <Grid.Cell span={20}><Item>Item-20</Item></Grid.Cell>\n  <Grid.Cell span={3} vspan={2}>\n    <Item style=\"text-orientation: upright; writing-mode: vertical-rl\">\n      I 3x2\n    </Item>\n  </Grid.Cell>\n  <Grid.Cell span={10}><Item>Item-10</Item></Grid.Cell>\n</Grid>`\n  }]\n}\n\nconst Responsive = () => {\n  return <FlexSection direction=\"column\" gutter={10}>\n    <Title>Responsive Usage</Title>\n    <Grid columns={2} gutter={24}>\n      <div>\n        <Info con>Needs extra component</Info>\n        <Info pro>It works with vertical span*</Info>\n        <Info con>Needs some tricks in some cases:</Info>\n        <Info con style={{ paddingLeft: '2em' }}>\n          On firefox overflow doesn't work properly, it need an&nbsp;\n          <span style={{ fontFamily: 'monospace' }}>overflow:auto</span>&nbsp;\n          or&nbsp;\n          <span style={{ fontFamily: 'monospace' }}>display:grid</span>&nbsp;\n          on the cell component\n        </Info>\n        <Info warning style={{ paddingLeft: '2em' }}>\n          *to fill vertical available space with v span cell needs to&nbsp;\n          <span style={{ fontFamily: 'monospace' }}>display:grid</span>\n        </Info>\n      </div>\n      <div>\n        <Info pro>It works as always</Info>\n      </div>\n      <Grid.Cell span={2}>\n        <Info waring style={{ textAlign: 'center' }}>in my experience, on 90% of the cases using this functionality is a sympthom of a poor layout design</Info>\n      </Grid.Cell>\n      <Code codeFragments={grid.fragment} />\n      <Code codeFragments={ant.fragment} />\n      <Result>\n        {grid.code}\n      </Result>\n      <Result>\n        {ant.code}\n      </Result>\n    </Grid>\n  </FlexSection>\n}\n\nexport default Responsive\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}